@page "/CompetencyEvaluator/Genders"



@attribute [Authorize(CompetencyEvaluatorPermissions.Genders.Default)]
@using global::CompetencyEvaluator.Genders
@using global::CompetencyEvaluator.Localization
@using global::CompetencyEvaluator.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using global::CompetencyEvaluator.Permissions
@using Microsoft.AspNetCore.Components
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits CompetencyEvaluatorComponentBase
@inject IGendersAppService GendersAppService
@inject IUiMessageService UiMessageService
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Genders"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Form id="GenderSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="GenderSearchForm" Clicked="GetGendersAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["name"]</FieldLabel>
                        <TextEdit Text="@Filter.name" TextChanged="@OnnameChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["ShortName"]</FieldLabel>
                        <TextEdit Text="@Filter.ShortName" TextChanged="@OnShortNameChangedAsync" />                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>
@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="GenderDto"
                  Data="GenderList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="GenderDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="GenderDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="GenderDto"
                                          Visible="@CanEditGender"
                                          Clicked="async () => await OpenEditGenderModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="GenderDto"
                                          Visible="@CanDeleteGender"
                                          Clicked="() => DeleteGenderAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="GenderDto"
                      Field="name"
                      Caption="@L["name"]">
              </DataGridColumn>

              <DataGridColumn TItem="GenderDto"
                      Field="ShortName"
                      Caption="@L["ShortName"]">
              </DataGridColumn>

            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateGenderModal" Closing="@CreateGenderModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateGenderForm">
            <ModalHeader>
                <ModalTitle>@L["NewGender"]</ModalTitle>
                <CloseButton Clicked="CloseCreateGenderModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewGenderValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewGender"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["name"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewGender.name" MaxLength="GenderConsts.nameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ShortName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewGender.ShortName" MaxLength="GenderConsts.ShortNameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateGenderModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateGenderForm" Clicked="CreateGenderAsync" />
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditGenderModal" Closing="@EditGenderModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditGenderForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditGenderModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingGenderValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingGender"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["name"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingGender.name" MaxLength="GenderConsts.nameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["ShortName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingGender.ShortName" MaxLength="GenderConsts.ShortNameMaxLength" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditGenderModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditGenderForm" Clicked="UpdateGenderAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>
